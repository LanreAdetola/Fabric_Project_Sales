{"name":"Dataflow 1_FactsOrders","ppdf:dataflowId":"96ce91b4-d888-45f4-9660-f2f45961b590","ppdf:owner":{"tenantId":"77d33cc5-c9b4-4766-95c7-ed5b515e1cce","userId":"b1d974c0-a2a6-4f45-a112-6c7facea553f"},"ppdf:fastCopy":true,"version":"1.0","culture":"en-GB","modifiedTime":"2025-04-27T06:13:29.9706842+00:00","ppdf:outputFileFormat":"Parquet","pbi:mashup":{"fastCombine":false,"allowNativeQueries":true,"queriesMetadata":{"DefaultDestination":{"queryId":"627e1c9e-342d-4294-aa27-96b8b3873d68","queryName":"DefaultDestination"},"WWI_FactOrders":{"queryId":"6bd2f8b8-1d93-4e0d-806c-309ce3fe5ba6","queryName":"WWI_FactOrders"},"WWI_FactOrders_DataDestination":{"queryId":"8f62d2de-e464-43eb-a521-ad6b5b96b0ae","queryName":"WWI_FactOrders_DataDestination"},"WWI_FactOrders_WriteToDataDestination":{"queryId":"9de236bb-76ce-454d-a694-27239839275f","queryName":"WWI_FactOrders_WriteToDataDestination"},"WWI_FactOrders_TransformForWriteToDataDestination":{"queryId":"78372d41-d618-4dc6-8827-73bdbde25174","queryName":"WWI_FactOrders_TransformForWriteToDataDestination"},"FastCopyStaging":{"queryId":"c8bbd93f-0e75-4ceb-8ac6-9f3d64ac51be","queryName":"FastCopyStaging"}},"document":"section Section1;\r\nshared DefaultDestination = let\r\n  DefaultDestination = Lakehouse.Contents([EnableFolding = false]){[workspaceId = \"9498f6af-d563-4a1a-a2c3-961e48cc7b47\"]}[Data]{[lakehouseId = \"7b76e446-58c3-4384-965c-fb04519a4dc9\"]}[Data]\r\nin\r\n  DefaultDestination;\r\nshared WWI_FactOrders = let\r\n  Source = Csv.Document(Web.Contents(\"https://thomasmore365-my.sharepoint.com/personal/r0913836_student_thomasmore_be/Documents/Apps/Microsoft Power Query/Uploaded Files/WWI_FactOrders.csv\"), [Delimiter = \",\", Columns = 15, Encoding = 28605]),\r\n  #\"Promoted headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars = true]),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Promoted headers\", {{\"ShipVia\", Int64.Type}, {\"OrderID\", Int64.Type}, {\"CustomerID\", type text}, {\"EmployeeID\", Int64.Type}, {\"OrderDate\", type text}, {\"RequiredDate\", type text}, {\"ShippedDate\", type text}, {\"Freight\", type number}, {\"ShipName\", type text}, {\"ShipAddress\", type text}, {\"ShipCity\", type text}, {\"ShipRegion\", type text}, {\"ShipPostalCode\", type text}, {\"ShipCountry\", type text}, {\"\", type text}}),\r\n  #\"Replaced value\" = Table.ReplaceValue(#\"Changed column type\", \"0:00\", \"\", Replacer.ReplaceText, {\"OrderDate\"}),\r\n  #\"Replaced value 1\" = Table.ReplaceValue(#\"Replaced value\", \"0:00\", \"\", Replacer.ReplaceText, {\"RequiredDate\"}),\r\n  #\"Replaced value 2\" = Table.ReplaceValue(#\"Replaced value 1\", \"0:00\", \"\", Replacer.ReplaceText, {\"ShippedDate\"}),\r\n  #\"Removed columns\" = Table.RemoveColumns(#\"Replaced value 2\", {\"ShipPostalCode\"}),\r\n  #\"Changed column type with locale\" = Table.TransformColumnTypes(#\"Removed columns\", {{\"OrderDate\", type date}}, \"en-US\"),\r\n  #\"Changed column type with locale 1\" = Table.TransformColumnTypes(#\"Changed column type with locale\", {{\"RequiredDate\", type date}}, \"en-US\"),\r\n  #\"Changed column type with locale 2\" = Table.TransformColumnTypes(#\"Changed column type with locale 1\", {{\"ShippedDate\", type date}}, \"en-US\"),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Changed column type with locale 2\", {{\"\", \"Extra\"}}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Renamed columns\", \"Custom\", each if List.NonNullCount(Text.ToList(Text.Select([ShipCountry], {\"A\"..\"Z\", \"a\"..\"z\"}))) = 0 then \"\" else [ShipCountry]),\r\n  #\"Removed columns 1\" = Table.RemoveColumns(#\"Added custom\", {\"ShipCountry\"}),\r\n  #\"Replaced value 3\" = Table.ReplaceValue(#\"Removed columns 1\", \"B-6000\", \"\", Replacer.ReplaceValue, {\"Custom\"}),\r\n  #\"Added custom 1\" = Table.AddColumn(#\"Replaced value 3\", \"Country\", each [Extra] & [Custom]),\r\n  #\"Removed columns 2\" = Table.RemoveColumns(#\"Added custom 1\", {\"Extra\", \"Custom\"}),\r\n  #\"Changed column type 1\" = Table.TransformColumnTypes(#\"Removed columns 2\", {{\"Country\", type text}}),\r\n  #\"Removed columns 3\" = Table.RemoveColumns(#\"Changed column type 1\", {\"ShipRegion\", \"ShipCity\"})\r\nin\r\n  #\"Removed columns 3\";\r\nshared WWI_FactOrders_DataDestination = let\r\n  Pattern = Lakehouse.Contents([CreateNavigationProperties = false, EnableFolding = false]),\r\n  Navigation_1 = Pattern{[workspaceId = \"9498f6af-d563-4a1a-a2c3-961e48cc7b47\"]}[Data],\r\n  Navigation_2 = Navigation_1{[lakehouseId = \"7b76e446-58c3-4384-965c-fb04519a4dc9\"]}[Data],\r\n  TableNavigation = Navigation_2{[Id = \"wwi_factorders\", ItemKind = \"Table\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[OrderID = nullable Int64.Type, CustomerID = nullable Text.Type, EmployeeID = nullable Int64.Type, OrderDate = nullable Date.Type, RequiredDate = nullable Date.Type, ShippedDate = nullable Date.Type, ShipVia = nullable Int64.Type, Freight = nullable Number.Type, ShipName = nullable Text.Type, ShipAddress = nullable Text.Type, Country = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\nshared DefaultStaging = let\r\n  DefaultStaging = Pipeline.DefaultModelStorage()\r\nin\r\n  DefaultStaging;\r\n[Staging = \"FastCopyStaging\"]\r\nshared WWI_FactOrders_WriteToDataDestination = let\r\n  WWI_FactOrders_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = WWI_FactOrders_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], WWI_FactOrders_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  WWI_FactOrders_WriteToDataDestination;\r\nshared WWI_FactOrders_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(WWI_FactOrders, {\"OrderID\", \"CustomerID\", \"EmployeeID\", \"OrderDate\", \"RequiredDate\", \"ShippedDate\", \"ShipVia\", \"Freight\", \"ShipName\", \"ShipAddress\", \"Country\"})\r\nin\r\n    SourceTable;\r\nshared FastCopyStaging = let\r\n  FastCopyStaging = Pipeline.FastCopyModelStorage(DefaultStaging, [Required = false])\r\nin\r\n  FastCopyStaging;\r\n","connectionOverrides":[{"path":"Lakehouse","kind":"Lakehouse","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Lakehouse\",\"path\":\"Lakehouse\"}","audience":null},{"path":"https://thomasmore365-my.sharepoint.com/personal/r0913836_student_thomasmore_be/","kind":"Web","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Web\",\"path\":\"https://thomasmore365-my.sharepoint.com/personal/r0913836_student_thomasmore_be/\"}","audience":null}]}}